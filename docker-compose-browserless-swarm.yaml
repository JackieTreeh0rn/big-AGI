# This file is used to run `big-AGI` and `browserless` with Docker Compose.
#
# The two containers are linked together and `big-AGI` is configured to use `browserless`
# as its Puppeteer endpoint (from the containers intranet, it is available browserless:3000).
#
# From your host, you can access big-AGI on http://127.0.0.1:3000 and browserless on http://127.0.0.1:9222.
#
# To start the containers, run:
#   docker-compose -f docs/docker/docker-compose-browserless.yaml up

version: '3.9'

x-logging:
  &default-logging
  driver: "json-file"
  options:
    max-size: "1m"
    max-file: "1"
    tag: "{{.Name}}"

services:
  big-agi:
    image: registry.bitwisesolutions.co/big-agi:latest
    # extra_hosts:
    #   - host.docker.internal:host-gateway
    # ports:
    #   - "3000:3000"
    env_file:
      - .env
    environment:
      - PUPPETEER_WSS_ENDPOINT=ws://browserless:3000
    networks:
      - big-agi
      - traefik-public
    command: [ "next", "start", "-p", "3000" ]
    depends_on:
      - browserless
    deploy:
      mode: replicated
      restart_policy:
        condition: on-failure
      replicas: 1
      # placement:
      #   constraints:
      #     - node.labels.WIRED == YES
      # update_config:
      #   parallelism: 1
      #   delay: 1m
      #   monitor: 15s
      labels:
        # - "gantry.services.excluded=true"
        - traefik.enable=true
        - traefik.swarm.network=traefik-public
        # - traefik.http.routers.bigagi.rule=Host(`bigagi.${ROOT_DOMAIN}`) && PathPrefix(`/public`)
        - traefik.http.routers.bigagi.rule=Host(`bigagi.${ROOT_DOMAIN}`)
        # Setting this in global -- command config above for all services
        # - traefik.http.routers.bigagi.tls=true
        # - traefik.http.routers.bigagi.tls.certresolver=letsencrypt
        # - traefik.http.routers.bigagi.tls.domains[0].main=${ROOT_DOMAIN}
        # - traefik.http.routers.bigagi.tls.domains[0].sans=*.${ROOT_DOMAIN}
        # - traefik.http.routers.bigagi.entrypoints=websecure
        - traefik.http.routers.bigagi.middlewares=chain-no-auth-stash@file,error-pages
        - traefik.http.routers.bigagi.service=bigagi-svc
        - traefik.http.services.bigagi-svc.loadbalancer.server.port=3000
    logging: *default-logging


  browserless:
    image: browserless/chrome:latest
    ports:
      - "9222:3000"  # Map host's port 9222 to container's port 3000
    environment:
      - MAX_CONCURRENT_SESSIONS=10
    deploy:
      mode: replicated
      restart_policy:
        condition: on-failure
      replicas: 1
      # placement:
      #   constraints:
      #     - node.labels.WIRED == YES
    networks:
      - big-agi
    logging: *default-logging


networks:
  big-agi:
    external: true
  traefik-public:
    external: true